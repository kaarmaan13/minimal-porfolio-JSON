---
import ThemeToggle from '../ThemeToggle.astro'
---

<header
  class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-8"
>
  <nav class="flex px-8 py-3 gap-x-10 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200 justify-center items-center">
    <a
      class={`opacity-80 hover:no-underline hover:opacity-100`}
      href="#experiencia">Experiencia</a
    >
    <a class={`opacity-80 hover:no-underline hover:opacity-100`} href="#proyectos"
      >Proyectos</a
    >
    <a class={`opacity-80 hover:no-underline hover:opacity-100`} href="#sobre-mi"
      >Sobre m√≠</a
    >
    <!-- <a class={`opacity-80 hover:no-underline hover:opacity-100`} href="#contacto">Contacto</a> -->
    <a
      class={`opacity-80 hover:no-underline hover:opacity-100`}
      href="/cv"
      target="_blank">CV</a
    >
    <ThemeToggle />
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-yellow-500")
            } else {
              item.classList.remove("text-yellow-500")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>